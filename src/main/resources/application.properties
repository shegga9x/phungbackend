spring.application.name=backend
# Database connection properties. The default values should work with the docker-compose file provided in the repository
# If you want to change this, make sure to also update the docker-compose file accordingly
app.database.name=starter-kit-db
app.database.username=${DATABASE_USERNAME:root}
app.database.password=${DATABASE_PASSWORD:PhungVip25082000@}
app.database.host=${DATABASE_HOST:localhost}
app.database.port=${DATABASE_PORT:3306}
app.vapid-public-key=BCrMRKuJa7Qc7ZVHiV283YJvPiMvSDkjb1uHQQNWrIRT5ztgvi6RFPoiNjp70v_VL0VLjsODEPOrsNQjc1UVpVU
app.vapid-private-key=LtMT7hEqoQ2-jSRC8tj2l80AgUVKyDv9_5XQTHFpMng
app.vapid-subject=mailto:email@example.com


app.application-name=starter-kit
app.base-url=${BASE_URL:http://localhost:8081}
app.allowed-origins=${ALLOWED_ORIGINS:http://localhost:3000}
app.login-page-url=${app.base-url}/auth/login
app.login-success-url=${app.allowed-origins}/auth/login-success

app.s3.bucket-name=appcuaphungvip
app.s3.access-key=9VSOLoIzO74OYT7s
app.s3.secret-key=jrUeJ4tXdRZkMqjaa52SQDwKV0Mq2O0pMspKbXCM
# I recommend using tebi.io, but you can use any s3 provider you want
app.s3.base-url=http://s3.tebi.io
app.s3.region=europe-central-1
app.s3.storage-class=STANDARD

app.admin-user-email=admin@email.com
app.admin-user-password=Password123

# spring.profiles.active=dev

# Github OAuth2
spring.security.oauth2.client.registration.github.client-id=Ov23liMNgN6jHvsB261i
spring.security.oauth2.client.registration.github.client-secret= 35f197c53d995cdadc1a4d32ef2612d7f5ba7037

# Google
spring.security.oauth2.client.registration.google.client-id=615682202631-dvs42ucvtoggfa7rgoua4vpfg0k7al11.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

# spring provided properties
spring.datasource.url=jdbc:mysql://${app.database.host}:${app.database.port}/${app.database.name}?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=FALSE
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${app.database.username}
spring.datasource.password=${app.database.password}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

org.jobrunr.background-job-server.enabled=true
org.jobrunr.dashboard.enabled=true

# SMPT host, this is localhost for development, it should work with your mailpit docker container.
# You can open mailpit ui on http://localhost:8025 to see all emails sent from your application in development
# You will use the host from the provider of your choice in production

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=shegga9x@gmail.com
spring.mail.password=mhph bzya jkzj tpls
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# spring.mail.host=localhost
# spring.mail.port=1025
# spring.mail.username=user
# spring.mail.password=password

# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.password=BNNF/qhJUNKlqLG11HxPAnxnbKVE2DWHKV8xIkqokGMq
# spring.mail.protocal=aws

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

server.port=${SERVER_PORT:8081}
server.forward-headers-strategy=FRAMEWORK

#common logging levels that you might want to use in development, just uncomment the ones you want to use and set the level you want
logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=TRACE
#logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE
# spring boot docker compose support
spring.docker.compose.enabled=false
spring.docker.compose.project-name=starter-kit
spring.docker.compose.file=backend/compose.yml

# SSH connection properties
ssh.host=ec2-18-141-197-235.ap-southeast-1.compute.amazonaws.com
ssh.ip=18.141.197.235
ssh.port=22
ssh.user=ubuntu
ssh.password=your-ec2-password
ssh.key.location=~/.ssh/phungvip.pem
db.local.port=3307
db.remote.host=dbphungvip.cpyikuymoq7w.ap-southeast-1.rds.amazonaws.com
db.remote.port=3306
db.remote.user=admin
db.remote.password=Nh17l91SlaOjSLDzNE0I



DEV_MOMO_ENDPOINT=https://test-payment.momo.vn/v2/gateway/api
DEV_ACCESS_KEY=mTCKt9W3eU1m39TW
DEV_PARTNER_CODE=MOMOLRJZ20181206
DEV_SECRET_KEY=SetA5RDnLHvt51AULf51DyauxUo3kDU6

# solr
spring.data.solr.host=http://localhost:8983/solr
spring.data.solr.core=books



# proxy
app.proxy-host=${PROXY_HOST:103.156.91.191}
app.proxy-port=${PROXY_PORT:2021}
app.proxy-user=${PROXY_USER:ipzn6e1o}
app.proxy-pass=${PROXY_PASS:iPZN6e1O}

# solr
app.solr-url=${SOLR_URL:http://localhost:8983/solr}
app.solr-username=solr
app.solr-password=PhungVip25082000@

spring.session.store-type=jdbc
server.servlet.session.cookie.same-site=None
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.domain=phungvip.io.vn
server.servlet.session.tracking-modes=cookie
